{"version":3,"sources":["images/movie-placeholder.svg","images/actor-placeholder.svg","actions/types.js","reducers/index.js","reducers/movies.js","reducers/genres.js","reducers/cast.js","actions/index.js","components/movie_item.js","containers/movie_list.js","containers/genre_filter.js","components/suggestions.js","components/search_bar.js","components/actor.js","containers/cast.js","components/movie_details_modal.js","containers/app.js","index.js"],"names":["module","exports","__webpack_require__","p","FETCH_MOVIES","FETCH_GENRES","FETCH_CAST","rootReducer","combineReducers","movies","state","arguments","length","undefined","action","type","types","payload","data","results","genres","Object","toConsumableArray","concat","cast","API_KEY","fetchMovies","CUSTOM_URL","url","request","axios","get","fetchGenreList","fetchCast","MOVIE_ID","MovieItem","_ref","movie","onMovieSelect","getMovieReleaseYear","title","poster_path","release_date","console","log","movieImage","moviePlaceholderImage","react_default","a","createElement","className","onClick","src","alt","MovieList","_this","this","movieItems","props","map","movieData","i","movie_item","key","id","Component","connect","GenreFilter","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filterByGenre","bind","assertThisInitialized","e","GENRE_ID","target","value","filterUrl","genreList","list","genre","name","onChange","defaultValue","dispatch","bindActionCreators","Suggestions","options","handleSelect","result","year","isNaN","SearchBar","query","showSuggestions","handleInputChange","toggleSuggestions","handleMovieSelect","getInfo","_this2","then","setState","searchBarValue","_this3","search","_this4","_this5","placeholder","ref","input","onBlur","suggestions","Actor","thumbnail","image","actorPlaceHolderImage","style","backgroundImage","Cast","movieId","actors","castList","castData","slice","actor","components_actor","profile_path","Modal","selectedMovie","onCloseModal","backdrop_path","overview","stopPropagation","containers_cast","App","showModal","handleMovieSelection","toggleModal","document","querySelector","classList","toggle","date","Date","getFullYear","search_bar_SearchBar","genre_filter","movie_list","movie_details_modal","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","es","store","reducers","app","getElementById"],"mappings":"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","file":"static/js/main.4724f686.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movie-placeholder.fc28652f.svg\";","module.exports = __webpack_public_path__ + \"static/media/actor-placeholder.ece4b611.svg\";","// Types are exported as constants to avoid conflicts and errors because of typos \nexport const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const FETCH_GENRES = 'FETCH_GENRES';\nexport const FETCH_CAST = 'FETCH_CAST';","import { combineReducers } from 'redux';\nimport MoviesReducer from './movies';\nimport GenresReducer from './genres';\nimport CastReducer from './cast';\n\nconst rootReducer = combineReducers({\n  movies: MoviesReducer,\n  genres: GenresReducer,\n  cast: CastReducer\n});\n\nexport default rootReducer;\n","import * as types from '../actions/types';\n\nexport default function(state = [], action) {\n\tswitch(action.type) {\n\t\tcase types.FETCH_MOVIES: \n\t\t\treturn [\n\t\t\t\taction.payload.data.results\n\t\t\t];\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import * as types from '../actions/types';\n\nexport default function(state = [], action) {\n\tswitch(action.type) {\n\t\tcase types.FETCH_GENRES: \n\t\t\treturn [\n\t\t\t\t...state, \n\t\t\t\taction.payload.data.genres\n\t\t\t];\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import * as types from '../actions/types';\n\nexport default function(state = [], action) {\n\tswitch(action.type) {\n\t\tcase types.FETCH_CAST: \n\t\t\treturn [\n\t\t\t\taction.payload.data.cast\n\t\t\t];\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import axios from 'axios';\nimport * as types from './types';\n\nconst API_KEY = 'fea48aa90ea7568ab98e7b21cdb2515a';\n\nexport function fetchMovies(CUSTOM_URL) {\n\tconst url = `https://api.themoviedb.org/3/${CUSTOM_URL}api_key=${API_KEY}`;\n\tconst request = axios.get(url);\n\treturn {\n\t\ttype: types.FETCH_MOVIES,\n\t\tpayload: request\n\t};\n}\n\nexport function fetchGenreList() {\n\tconst url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n\tconst request = axios.get(url);\n\treturn {\n\t\ttype: types.FETCH_GENRES,\n\t\tpayload: request\n\t}\n}\n\nexport function fetchCast(MOVIE_ID) {\n\tconst url = `https://api.themoviedb.org/3/movie/${MOVIE_ID}/credits?api_key=${API_KEY}`;\n\tconst request = axios.get(url);\n\treturn {\n\t\ttype: types.FETCH_CAST, \n\t\tpayload: request\n\t}\n}\n","import React from 'react';\nimport moviePlaceholderImage from '../images/movie-placeholder.svg';\n\nconst MovieItem = ({ movie, onMovieSelect, getMovieReleaseYear }) => {\n\tconst { title, poster_path, release_date } = movie;\n\tconsole.log(poster_path);\n\tconst movieImage = poster_path === null ? moviePlaceholderImage : `http://image.tmdb.org/t/p/w154/${poster_path}`;\n\treturn (\n\t\t<li className=\"movie-item\" onClick={() => onMovieSelect(movie)}>\n\t\t\t<img src={movieImage} alt={`${title} - Movie Poster`}/> \n\t\t\t<p className=\"movie-title\">{title}</p>\n\t\t\t<p className=\"movie-release-date\">{getMovieReleaseYear(release_date)}</p> {/* placeholder date */}\n\t\t</li>\n\t);\n}\n\nexport default MovieItem;","import React, { Component } from 'react';\nimport MovieItem from '../components/movie_item';\nimport { connect } from 'react-redux';\n\nclass MovieList extends Component {\n\trender() {\t\n\t\tconst movieItems = this.props.movies.map((movieData) => {\n\t\t\treturn movieData.map((movie,i) => {\n\t\t\t\treturn <MovieItem key={movie.id} movie={movie} onMovieSelect={this.props.onMovieSelect} getMovieReleaseYear={this.props.getMovieReleaseYear}/>\n\t\t\t})\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"movie-list-container\">\n\t\t\t\t<h1>Top Rated Movies</h1>\n\t\t\t\t<ul>\n\t\t\t\t\t{ movieItems }\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps({ movies }) {\n\treturn { movies };\n}\n\nexport default connect(mapStateToProps)(MovieList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchMovies } from '../actions/index';\n\nclass GenreFilter extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.filterByGenre = this.filterByGenre.bind(this);\n\t}\n\n\tfilterByGenre(e) {\n\t\tconst GENRE_ID = e.target.value;\n\t\tconst filterUrl =  GENRE_ID === 'all' ? 'movie/top_rated?' : `discover/movie?sort_by=popularity.desc&page=1&with_genres=${GENRE_ID}&`;\n\t\tthis.props.fetchMovies(filterUrl);\n\t}\n\n\trender() {\n\t\tconst genreList = this.props.genres.map(list => {\n\t\t\treturn list.map((genre) => {\n\t\t  \t\treturn <option value={genre.id} key={genre.id}>{genre.name}</option>\n\t\t\t});\n\t\t});\n\t\t\n\t\treturn (\n\t\t\t<div className=\"genre-filter\">\n\t\t\t\t<label>Genre</label>\n\t\t\t\t<select id=\"genre-list\" onChange={this.filterByGenre}>\n\t\t\t\t\t<option value=\"all\" defaultValue>All</option>\n\t\t\t\t\t{ genreList }\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t);\n\t}\n} \n\nfunction mapStateToProps({ genres }) {\n\treturn { genres };\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({ fetchMovies }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenreFilter);","import React from 'react';\n\nconst Suggestions = ({results, onMovieSelect, getMovieReleaseYear, handleSelect}) => {\n\tlet options; \n\n\tif( results.length === 0) {\n\t\toptions = <p>No results found</p>\n\t} else {\n\t  \toptions = results.map((result) => {\n\t  \t\tconst year = getMovieReleaseYear(result.release_date);\n\n\t\t    return (\n\t\t    \t<li key={result.id} className=\"suggestion\" onClick={() => {onMovieSelect(result); handleSelect()}}>\n\t\t\t      \t{ result.title }\n\t\t\t      \t<span className=\"release-date\">\n\t\t\t      \t\t{ isNaN(year) ? '' : year }\n\t\t\t      \t</span>\n\t\t\t    </li>\n\t\t    );\n\t  });\n\t}\n\n  return <ul className=\"autocomplete-container\">{options}</ul>\n}\n\nexport default Suggestions;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Suggestions from './suggestions';\n\nexport default class SearchBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { \n\t\t\tquery: '', \n\t\t\tresults: [], \n\t\t\tshowSuggestions: false \n\t\t};\n\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.toggleSuggestions = this.toggleSuggestions.bind(this);\n\t\tthis.handleMovieSelect = this.handleMovieSelect.bind(this);\n\t\tthis.getInfo = this.getInfo.bind(this);\n\t}\n\n\tgetInfo() {\n\t\t//Fetching data based on user input query\n\t    axios.get(`https://api.themoviedb.org/3/search/movie?sort_by=popularity.desc&include_adult=false&query=${this.state.query}&api_key=fea48aa90ea7568ab98e7b21cdb2515a`)\n\t      .then(({ data }) => {\n\t        this.setState({\n\t          results: data.results\n\t        })\n\t      });\n\t}\n\n\ttoggleSuggestions(searchBarValue) {\n\t\tif(searchBarValue === '' || typeof(searchBarValue) !== 'string') {\n\t\t\tthis.setState({ showSuggestions: false })\n\t\t} else {\n\t\t\tthis.setState({ showSuggestions : true })\n\t\t}\n\t}\n\thandleInputChange(e){\n\t\tthis.toggleSuggestions(e.target.value);\n\t\tthis.setState({\n\t      query: this.search.value\n\t    }, () => {\n\t      if (this.state.query && this.state.query.length >= 1) {\n\t          this.getInfo();\n\t      } \n\t    })\n\t}\n\n\thandleMovieSelect() {\n\t\tthis.setState({ query: ''}, () => {\n\t\t\tthis.toggleSuggestions(this.search.value)\n\t\t}); //emptying the search bar and toggling the suggestions container\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form className=\"search-bar-container\">\n\t\t\t\t<input \n\t\t\t\t\tvalue={this.state.query}\n\t\t\t\t\ttype=\"search\"\n\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\tref={input => this.search = input}\n         \t\t\tonChange={this.handleInputChange} \n         \t\t\tonBlur={this.toggleSuggestions} />\n         \t\t\t{ \n         \t\t\t\tthis.state.showSuggestions && \n         \t\t\t\t<Suggestions results={this.state.results} onMovieSelect={this.props.onMovieSelect} getMovieReleaseYear={this.props.getMovieReleaseYear} handleSelect={this.handleMovieSelect}/>\n         \t\t\t}\n\t\t\t</form>\t\n\t\t);\n\t}\n}\n\n","import React from 'react';\nimport actorPlaceHolderImage from '../images/actor-placeholder.svg';\n\nconst Actor = ({thumbnail , name}) => {\t\t\n\tconsole.log(thumbnail);\n\tconst image = thumbnail === null ? `url(${actorPlaceHolderImage})` : `url(http://image.tmdb.org/t/p/w185/${thumbnail})`; \n\treturn (\n\t\t<li className=\"actor\">\n\t\t\t<div className=\"img-container\">\n\t\t\t\t<div className=\"actor-thumbnail\" style={{backgroundImage: `${image}`}}></div>\n\t\t\t</div>\n\t\t\t<p className=\"actor-name\">{ name }</p>\n\t\t</li>\n\t);\n} \n\nexport default Actor;","import React, { Component } from 'react';\nimport Actor from '../components/actor';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchCast } from '../actions/index';\n\nclass Cast extends Component {\n\tcomponentDidMount() {\n\t\t//fetching cast data based on selected movie\n\t\tthis.props.fetchCast(this.props.movieId);\n\t}\n\trender() {\n\t\tconst maxNumOfActors = 7;\n\t\tconst actors = this.props.castList.cast.map(castData => {\n\t\t\treturn castData.slice(0, maxNumOfActors).map(actor => {\n\t\t\t\treturn <Actor key={actor.id} name={actor.name} thumbnail={actor.profile_path}/>\n\t\t\t});\n\t\t});\n\t\t\n\t\treturn (\n\t\t\t<div className=\"cast\">\n\t\t\t\t<h3 className=\"section-label\">Cast</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{ actors }\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n} \n\nfunction mapStateToProps(castList) {\n\treturn { castList };\n}\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({ fetchCast }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cast);","import React from 'react';\nimport Cast from '../containers/cast';\nconst BASE_IMG_URL = 'http://image.tmdb.org/t/p/w780/'; //Size options for images: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\n\nconst Modal = ({ selectedMovie, onCloseModal, getMovieReleaseYear }) => {\n\tconst { id, title, backdrop_path , overview, release_date } = selectedMovie;\n\treturn (\n\t\t<div className=\"modal-outer-container\" onClick={onCloseModal}>\n\t\t\t<div className=\"modal-inner-container\" onClick={(e) => e.stopPropagation()} style={{backgroundImage: `url(${BASE_IMG_URL}${backdrop_path}`}}>\n\t\t\t\t<div className=\"backdrop\">\n\t\t\t\t\t<div className=\"close-btn\" onClick={onCloseModal}>×</div>\n\t\t\t\t\t<div className=\"details\">\n\t\t\t\t\t\t<div className=\"movie-info\">\n\t\t\t\t\t\t\t<h2 className=\"movie-title\">{ title }</h2>\n\t\t\t\t\t\t\t<p className=\"movie-release-date subheading\">{getMovieReleaseYear(release_date)}</p>\n\t\t\t\t\t\t\t<p className=\"movie-description\">{ overview }</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Cast movieId={id}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchMovies, fetchGenreList } from '../actions/index';\nimport MovieList from './movie_list';\nimport GenreFilter from './genre_filter';\nimport SearchBar from '../components/search_bar';\nimport Modal from '../components/movie_details_modal';\n\nconst topRatedMoviesUrl = 'movie/top_rated?';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { showModal: false };\n\n\t\tthis.handleMovieSelection = this.handleMovieSelection.bind(this);\n\t\tthis.toggleModal = this.toggleModal.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\t// Fetching the top rated movie list when the app component has loaded\n\t\tthis.props.fetchMovies(topRatedMoviesUrl);\n\t\tthis.props.fetchGenreList();\n\t}\n\n\ttoggleModal() {\n\t\tthis.setState({\n\t\t\tshowModal: !this.state.showModal\n\t\t});\n\n\t\t//Dim background and disable scrolling when modal is open\n\t\tdocument.querySelector(\"body\").classList.toggle(\"modal-open\");\n\t}\n\n\tgetMovieReleaseYear(date) {\n\t\t//Extracting year from the movie release date\n\t\tconst releaseDate = new Date(date);\n\t\treturn releaseDate.getFullYear();\n\t}\n\n\thandleMovieSelection(movie) {\n\t\tthis.setState({\n\t\t\tselectedMovie: movie\n\t\t})\t\t\n\n\t\tthis.toggleModal();\n\t}\n\trender() {\n\t    return (\n\t      <div className=\"App\">\n\t      \t<div className=\"body-content\">\n\t      \t\t<div className=\"filters\">\n\t\t\t\t\t<SearchBar onMovieSelect={this.handleMovieSelection} getMovieReleaseYear={this.getMovieReleaseYear}/>\n\t\t\t      \t<GenreFilter />\n\t\t      \t</div>\n\n\t\t      \t<MovieList onMovieSelect={this.handleMovieSelection} getMovieReleaseYear={this.getMovieReleaseYear}/>\n\t      \t</div>\n\t      \t{\n\t      \t\tthis.state.showModal && this.state.selectedMovie &&\n\t      \t\t<Modal selectedMovie={this.state.selectedMovie} onCloseModal={this.toggleModal} getMovieReleaseYear={this.getMovieReleaseYear}/>\n\t      \t}\n\t      </div>\n\t    );\n\t}\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({ fetchMovies, fetchGenreList }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReduxPromise from 'redux-promise';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport App from './containers/app';\nimport './styles/main.scss';\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}